@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 210 20% 98%;

  --foreground: 210 15% 15%;

  --border: 210 15% 85%;

  --card: 0 0% 100%;

  --card-foreground: 220 15% 20%;

  --card-border: 210 15% 90%;

  --sidebar: 220 13% 96%;

  --sidebar-foreground: 220 15% 20%;

  --sidebar-border: 220 13% 89%;

  --sidebar-primary: 210 100% 30%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 13% 91%;

  --sidebar-accent-foreground: 220 15% 20%;

  --sidebar-ring: 210 100% 30%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 15% 20%;

  --popover-border: 220 13% 89%;

  --primary: 210 100% 30%;

  --primary-foreground: 0 0% 98%;

  --secondary: 45 95% 48%;

  --secondary-foreground: 220 15% 15%;

  --muted: 210 15% 92%;

  --muted-foreground: 220 9% 46%;

  --accent: 45 95% 93%;

  --accent-foreground: 45 95% 25%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 86%;
  --ring: 210 100% 30%;
  --chart-1: 210 100% 30%;
  --chart-2: 45 95% 48%;
  --chart-3: 142 76% 36%;
  --chart-4: 38 92% 50%;
  --chart-5: 270 65% 55%;

  --font-sans: Inter, Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 69% / 0.08);
  --shadow-xs: 0px 1px 2px 0px hsl(220 13% 69% / 0.12);
  --shadow-sm: 0px 1px 3px 0px hsl(220 13% 69% / 0.10), 0px 1px 2px -1px hsl(220 13% 69% / 0.10);
  --shadow: 0px 1px 3px 0px hsl(220 13% 69% / 0.10), 0px 1px 2px -1px hsl(220 13% 69% / 0.10);
  --shadow-md: 0px 4px 6px -1px hsl(220 13% 69% / 0.10), 0px 2px 4px -2px hsl(220 13% 69% / 0.10);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 69% / 0.10), 0px 4px 6px -4px hsl(220 13% 69% / 0.10);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 69% / 0.10), 0px 8px 10px -6px hsl(220 13% 69% / 0.10);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 69% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 40% 8%;

  --foreground: 210 10% 92%;

  --border: 220 20% 25%;

  --card: 220 35% 12%;

  --card-foreground: 220 9% 89%;

  --card-border: 222 47% 21%;

  --sidebar: 222 47% 13%;

  --sidebar-foreground: 220 9% 89%;

  --sidebar-border: 222 47% 19%;

  --sidebar-primary: 210 100% 70%;

  --sidebar-primary-foreground: 220 15% 20%;

  --sidebar-accent: 222 47% 19%;

  --sidebar-accent-foreground: 220 9% 89%;

  --sidebar-ring: 210 100% 70%;

  --popover: 222 47% 16%;

  --popover-foreground: 220 9% 89%;

  --popover-border: 222 47% 21%;

  --primary: 210 100% 70%;

  --primary-foreground: 220 15% 20%;

  --secondary: 45 95% 68%;

  --secondary-foreground: 220 15% 15%;

  --muted: 222 47% 19%;

  --muted-foreground: 220 9% 63%;

  --accent: 222 47% 19%;

  --accent-foreground: 220 9% 89%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 222 47% 28%;
  --ring: 210 100% 70%;
  --chart-1: 210 100% 70%;
  --chart-2: 45 95% 68%;
  --chart-3: 142 76% 56%;
  --chart-4: 38 92% 60%;
  --chart-5: 270 65% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(222 47% 4% / 0.20);
  --shadow-xs: 0px 1px 2px 0px hsl(222 47% 4% / 0.25);
  --shadow-sm: 0px 1px 3px 0px hsl(222 47% 4% / 0.20), 0px 1px 2px -1px hsl(222 47% 4% / 0.20);
  --shadow: 0px 1px 3px 0px hsl(222 47% 4% / 0.20), 0px 1px 2px -1px hsl(222 47% 4% / 0.20);
  --shadow-md: 0px 4px 6px -1px hsl(222 47% 4% / 0.20), 0px 2px 4px -2px hsl(222 47% 4% / 0.20);
  --shadow-lg: 0px 10px 15px -3px hsl(222 47% 4% / 0.20), 0px 4px 6px -4px hsl(222 47% 4% / 0.20);
  --shadow-xl: 0px 20px 25px -5px hsl(222 47% 4% / 0.20), 0px 8px 10px -6px hsl(222 47% 4% / 0.20);
  --shadow-2xl: 0px 25px 50px -12px hsl(222 47% 4% / 0.40);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Professional Micro-Interactions */
  
  /* Enhanced Focus States with Smooth Transitions */
  .focus-enhance {
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .focus-enhance:focus-within {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px -2px rgba(0, 0, 0, 0.1);
  }
  
  /* Professional Scale Interactions */
  .scale-interaction {
    transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .scale-interaction:hover {
    transform: scale(1.02);
  }
  
  .scale-interaction:active {
    transform: scale(0.98);
  }
  
  /* Enhanced Button Interactions */
  .button-enhance {
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }
  
  .button-enhance::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
    transform: translateX(-100%);
    transition: transform 300ms ease;
  }
  
  .button-enhance:hover::before {
    transform: translateX(100%);
  }
  
  /* Smooth Loading States */
  .loading-shimmer {
    background: linear-gradient(90deg, 
      hsl(var(--muted)) 25%, 
      hsl(var(--muted) / 0.8) 50%, 
      hsl(var(--muted)) 75%
    );
    background-size: 200% 100%;
    animation: shimmer 2s infinite;
  }
  
  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }
  
  /* Professional Card Interactions */
  .card-enhance {
    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, box-shadow;
  }
  
  .card-enhance:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 10px 25px -5px rgba(0, 0, 0, 0.1),
      0 8px 10px -6px rgba(0, 0, 0, 0.1);
  }
  
  /* Subtle Pulse Animation for Active States */
  .pulse-subtle {
    animation: pulse-subtle 2s infinite;
  }
  
  @keyframes pulse-subtle {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
  
  /* Enhanced Form Field Interactions */
  .field-enhance {
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .field-enhance:focus {
    transform: scale(1.01);
    border-color: hsl(var(--primary));
    box-shadow: 0 0 0 3px hsl(var(--primary) / 0.1);
  }
  
  /* Professional Ripple Effect */
  .ripple {
    position: relative;
    overflow: hidden;
  }
  
  .ripple::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 300ms, height 300ms;
  }
  
  .ripple:active::after {
    width: 300px;
    height: 300px;
  }
  
  /* Smooth State Transitions */
  .state-transition {
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Enhanced Dialog Animations */
  .dialog-enhance {
    animation: dialog-appear 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  @keyframes dialog-appear {
    from {
      opacity: 0;
      transform: translate(-50%, -50%) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  }
  
  /* Professional Loading Spinner */
  .spinner-professional {
    width: 16px;
    height: 16px;
    border: 2px solid hsl(var(--muted));
    border-top: 2px solid hsl(var(--primary));
    border-radius: 50%;
    animation: spin-smooth 1s linear infinite;
  }
  
  @keyframes spin-smooth {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
}